{"version":3,"sources":["components/search/search.component.jsx","components/card/card.component.jsx","components/cardList/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChange","className","type","onChange","Card","props","alt","src","monster","id","name","email","CardList","avengers","map","App","state","searchField","fetch","then","response","json","setState","this","console","log","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","s","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACAC,UAAY,SACZC,KAAK,SACLH,YAAaA,EACbI,SAAUH,MCLDI,G,MAAO,SAACC,GAAD,OAChB,sBAAKJ,UAAU,iBAAf,UACI,qBAAMA,UAAU,QAAQK,IAAI,UAAUC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,eACzC,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,aCFbC,G,MAAY,SAAAP,GAAK,OAC1B,sBAAKJ,UAAU,YAAf,UACKI,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAwBA,QAAUA,GAAtBA,EAAQC,OAF5B,SCqCWM,E,kDAlCb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTH,SAAU,GACVI,YAAY,IAJH,E,gEAOO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAC,GAAQ,OAAE,EAAKE,SAAS,CAACT,SAASO,S,+BAEjC,IAAD,SAC0BG,KAAKP,MAA9BH,EADD,EACCA,SAAUI,EADX,EACWA,YACjBO,QAAQC,MACR,IAAMC,EAAmBb,EAASc,QAAO,SAAAnB,GAAO,OAAEA,EAAQE,KAAKkB,cAAcC,SAASZ,EAAYa,wBAClG,OACC,sBAAK7B,UAAU,MAAf,UAEE,oBAAIA,UAAY,UAAhB,8BACA,cAAC,EAAD,CACAF,YAAc,kBACdC,aAAgB,SAAA+B,GAAC,OAAE,EAAKT,SAAS,CAACL,YAAYc,EAAEC,OAAOC,WAGtD,cAAC,EAAD,CAAUpB,SAAYa,W,GA1BZQ,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9a2a7559.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./search.style.css\"\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) =>(\r\n    <input \r\n    className = \"search\"\r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange={handleChange}/>\r\n)","import React from \"react\";\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props)=> (\r\n    <div className=\"card-container\">\r\n        <img  className=\"photo\" alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`}/>\r\n        <h1>{props.monster.name}</h1>\r\n        <p>{props.monster.email}</p>\r\n       </div>\r\n    \r\n)\r\n    \r\n       \r\n    \r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport \"./card-list.styles.css\"\r\n\r\n\r\nexport const CardList  = props =>(\r\n    <div className=\"card-list\">\r\n        {props.avengers.map(monster=>(\r\n            <Card key ={monster.id} monster= {monster}/>\r\n        ))};\r\n    </div>\r\n\r\n)\r\n    \r\n    \r\n","\nimport React ,{Component} from 'react';\nimport './App.css';\nimport {SearchBox} from './components/search/search.component';\n\n\nimport {CardList} from \"./components/cardList/card-list.component\";\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      avengers :[],\n      searchField:\"\"\n    };\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response=>response.json())\n    .then(response=>this.setState({avengers:response}))\n  }\n  render(){\n    const {avengers ,searchField} = this.state;\n    console.log();\n    const filteredMonsters = avengers.filter(monster=>monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n    return (\n     <div className=\"App\">\n\n       <h1 className = \"heading\">Monsters Rolodex</h1>\n       <SearchBox\n       placeholder = 'search-monsters'\n       handleChange = {s=>this.setState({searchField:s.target.value})}\n       / >\n       \n        <CardList avengers = {filteredMonsters}>\n        \n          </CardList> \n       \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}